<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.55">
    <script>pipeline {
    agent any
    stages {
        stage(&apos;Stage 1&apos;) {
            steps {
                script {
                    echo &apos;Stage 1&apos;
                }
            }
        }
        stage(&apos;Input&apos;) {
            agent none
            steps {
                timeout(1) {
                    milestone 1
                    script {
                        userInput = input(
                                submitterParameter: &apos;submitter&apos;,
                                message: &apos;Request deployment to PRO by creating a JIRA ticket for SysOps team?\nServices to deploy:&apos;,
                                parameters: [
                                        [$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, name: &apos;prices&apos;, description: &apos;&apos;],
                                        [$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, name: &apos;prices-loader&apos;, description: &apos;&apos;]
                                ]
                        )
                        println userInput
                        userInput?.findAll { it.value }?.each {
                            println it.key.toString()
                        }
                    }
                    milestone 2
                }
            }
        }
        stage(&apos;Stage 3&apos;) {
            agent any
            steps {
                script {
                    echo &apos;Stage 3&apos;
                    echo &quot;userInput=$userInput&quot;
                }
            }
        }

    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>